---
title: "Untitled"
author: "tr"
date: "2020/5/7"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r}
T <- "釋名第一回　青衫磊落險<U+5CEF>行第二回　玉壁月華明第三回　馬疾香幽第四回　崖高人遠第五回　微步縠紋生第六回　誰"
```
```{r}
A <- "(?>=第一回)(..|..|...)+(?=第二回)"
H <- str_view(T,A)
H
```
```{r}
twDate <-  c("民國108年12月5日","民國98年10月5日")

library(stringr)
# 準備regex: 
## 取出：「前有」民國，「後有」年的「數字」「們」
## "(?<={A_regex}){target_regex}(?={B_regex})"

target_regex <- "[0-9]+"
A_regex <- "民國"
B_regex <- "年"

regex_pattern <- glue::glue(
  "(?<={A_regex}){target_regex}(?={B_regex})"
  )

print(regex_pattern)

## 如果同學已經很熟就可以直接寫
regex_pattern <-
  "(?<=民國)[0-9]+(?=年)"

# 取出民國年，計算西元年
year <- 
  str_extract(
    twDate,
    regex_pattern)
westernYear <- as.integer(year)+1911

# 替換民國xx年的xx成西元年數字
str_replace(
  twDate,
  regex_pattern,  # 要換掉的文字
  as.character(westernYear) # 要替換的內容
) -> twDate_reformat
print(twDate_reformat)


lubridate::ymd(twDate_reformat)
```
```{r}
addresses <- c(
  '臺  中市后里區公館里尾社路  385號',
  '新竹市東區科學園路125號1樓',
  '新竹市北區竹光路99號',
  '金門縣金城鎮賢庵里山前33號',
  '臺中市南屯區工業區二十四路23號1樓')
myRegexSlotMachine <- "(?<=  )(..|..|...)(?=  )"
print(myRegexSlotMachine)
str_view_all(addresses,myRegexSlotMachine)
str_extract(addresses,myRegexSlotMachine)

str_view_all(addresses,"[0-9]+") # 樓號也會選到
```

